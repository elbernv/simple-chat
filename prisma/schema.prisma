// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model session {
  id            BigInt    @id @default(autoincrement())
  email         String    @unique @db.VarChar(256)
  password      String    @db.VarChar(1024)
  lastAccess    DateTime? @db.Timestamptz(3)
  timesLoggedIn Int       @default(0)

  user     user?
  customer customer?

  type   session_type @relation(fields: [typeId], references: [id])
  typeId Int          @db.SmallInt
}

model session_type {
  id   Int    @id @default(autoincrement()) @db.SmallInt
  name String @db.VarChar(256)

  session session[]
}

model user {
  id        BigInt    @id @default(autoincrement())
  name      String    @db.VarChar(1024)
  lastName  String?   @db.VarChar(1024)
  imgUrl    String?   @db.VarChar(5120)
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  statusId Int          @db.SmallInt
  status   user_status? @relation(fields: [statusId], references: [id])

  session   session @relation(fields: [sessionId], references: [id])
  sessionId BigInt  @unique

  type   user_type @relation(fields: [typeId], references: [id])
  typeId Int       @db.SmallInt
}

model user_status {
  id          Int     @id @default(autoincrement()) @db.SmallInt
  name        String  @db.VarChar(256)
  description String? @db.VarChar(512)

  users user[]
}

model user_type {
  id          Int     @id @default(autoincrement()) @db.SmallInt
  name        String  @db.VarChar(256)
  description String? @db.VarChar(512)

  users user[]
}

model customer {
  id        BigInt    @id @default(autoincrement())
  name      String    @db.VarChar(1024)
  lastName  String?   @db.VarChar(1024)
  imgUrl    String?   @db.VarChar(5120)
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  statusId Int             @db.SmallInt
  status   customer_status @relation(fields: [statusId], references: [id])

  session   session @relation(fields: [sessionId], references: [id])
  sessionId BigInt  @unique

  type   customer_type @relation(fields: [typeId], references: [id])
  typeId Int           @db.SmallInt
}

model customer_status {
  id          Int     @id @default(autoincrement()) @db.SmallInt
  name        String  @db.VarChar(256)
  description String? @db.VarChar(512)

  customers customer[]
}

model customer_type {
  id          Int     @id @default(autoincrement()) @db.SmallInt
  name        String  @db.VarChar(256)
  description String? @db.VarChar(512)

  customers customer[]
}
